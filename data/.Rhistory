backward_model <-c('backward',backwardcv,backwardaic,backwardbic )
names(backward_model) <- c("model","cv", "aic",'bic')
upward <- glm(doctor ~ income + crimes + beds + T.p ,data= smba)
upwardcv <- cv.glm(smba,upward,K=10)$delta[2]
upwardaic <- AIC(upward)
upwardbic <- BIC(upward)
upward_model <-c('backward',upwardcv ,upwardaic,upwardbic )
names(upward_model) <- c("model","cv", "aic",'bic')
downward <- glm(doctor ~ Land + beds + h.sch + labor + income + crimes,data = smba)
downwardcv <- cv.glm(smba,downward,K=10)$delta[2]
downwardaic <- AIC(downward)
downwardbic <- BIC(downward)
downward_model <-c('downward',downwardcv,downwardaic,downwardbic)
names(downward_model) <- c("model","cv", "aic",'bic')
bind_rows(forward_model,backward_model,upward_model,downward_model)
forward <- glm(doctor ~ income + crimes + beds + T.p,data = smba)
forwardcv <- cv.glm(smba,forward,K=10)$delta[2]
forwardaic <- AIC(forward)
forwardbic <- BIC(forward)
forward_model <-c('forward',forwardcv,forwardaic,forwardbic )
names(forward_model) <- c("model","cv", "aic",'bic')
backward <- glm(doctor ~ Land + beds + h.sch + labor + income + crimes,data = smba)
backwardcv <- cv.glm(smba,backward,K=10)$delta[2]
backwardaic <- AIC(backward)
backwardbic <- BIC(backward)
backward_model <-c('backward',backwardcv,backwardaic,backwardbic )
names(backward_model) <- c("model","cv", "aic",'bic')
upward <- glm(doctor ~ income + crimes + beds + T.p ,data= smba)
upwardcv <- cv.glm(smba,upward,K=10)$delta[2]
upwardaic <- AIC(upward)
upwardbic <- BIC(upward)
upward_model <-c('upward',upwardcv ,upwardaic,upwardbic )
names(upward_model) <- c("model","cv", "aic",'bic')
downward <- glm(doctor ~ Land + beds + h.sch + labor + income + crimes,data = smba)
downwardcv <- cv.glm(smba,downward,K=10)$delta[2]
downwardaic <- AIC(downward)
downwardbic <- BIC(downward)
downward_model <-c('downward',downwardcv,downwardaic,downwardbic)
names(downward_model) <- c("model","cv", "aic",'bic')
bind_rows(forward_model,backward_model,upward_model,downward_model)
forward=stepAIC(fit.1,scope=list(upper=~Land+T.p+P.city+p.65+beds+h.sch+labor+income+crimes+region,
lower=~1),direction="forward")
stepwiseF=stepAIC(fit.1,scope=list(upper=~Land+T.p+P.city+p.65+beds+h.sch+labor+income+crimes+region,
lower=~1),direction="both")
backward=stepAIC(fit.2,scope=list(upper=~Land+T.p+P.city+p.65+beds+h.sch+labor+income+crimes+region,
lower=~1),direction="backward")
stepwiseB=stepAIC(fit.2,scope=list(upper=~Land+T.p+P.city+p.65+beds+h.sch+labor+income+crimes+region,
lower=~1),direction="both")
forward <- glm(doctor ~ income + crimes + beds + T.p,data = smba)
forwardcv <- cv.glm(smba,forward,K=10)$delta[2]
forwardaic <- AIC(forward)
forwardbic <- BIC(forward)
forward_model <-c('forward',forwardcv,forwardaic,forwardbic )
names(forward_model) <- c("model","cv", "aic",'bic')
backward <- glm(doctor ~ Land + beds + h.sch + labor + income + crimes,data = smba)
backwardcv <- cv.glm(smba,backward,K=10)$delta[2]
backwardaic <- AIC(backward)
backwardbic <- BIC(backward)
backward_model <-c('backward',backwardcv,backwardaic,backwardbic )
names(backward_model) <- c("model","cv", "aic",'bic')
upward <- glm(doctor ~ income + crimes + beds + T.p,data= smba)
upwardcv <- cv.glm(smba,upward,K=10)$delta[2]
upwardaic <- AIC(upward)
upwardbic <- BIC(upward)
upward_model <-c('upward',upwardcv ,upwardaic,upwardbic )
names(upward_model) <- c("model","cv", "aic",'bic')
downward <- glm(doctor ~ Land + beds + h.sch + labor + income + crimes,data = smba)
downwardcv <- cv.glm(smba,downward,K=10)$delta[2]
downwardaic <- AIC(downward)
downwardbic <- BIC(downward)
downward_model <-c('downward',downwardcv,downwardaic,downwardbic)
names(downward_model) <- c("model","cv", "aic",'bic')
bind_rows(forward_model,backward_model,upward_model,downward_model)
forward <- glm(doctor ~ income + crimes + beds + T.p,data = smba)
forwardcv <- cv.glm(smba,forward,K=10)$delta[2]
forwardaic <- AIC(forward)
forwardbic <- BIC(forward)
forward_model <-c('forward',forwardcv,forwardaic,forwardbic )
names(forward_model) <- c("model","cv", "aic",'bic')
backward <- glm(doctor ~ Land + beds + h.sch + labor + income + crimes,data = smba)
backwardcv <- cv.glm(smba,backward,K=10)$delta[2]
backwardaic <- AIC(backward)
backwardbic <- BIC(backward)
backward_model <-c('backward',backwardcv,backwardaic,backwardbic )
names(backward_model) <- c("model","cv", "aic",'bic')
upward <- glm(doctor ~ income + crimes + beds + T.p,data= smba)
upwardcv <- cv.glm(smba,upward,K=10)$delta[2]
upwardaic <- AIC(upward)
upwardbic <- BIC(upward)
upward_model <-c('upward',upwardcv ,upwardaic,upwardbic )
names(upward_model) <- c("model","cv", "aic",'bic')
downward <- glm(doctor ~ Land + beds + h.sch + labor + income + crimes,data = smba)
downwardcv <- cv.glm(smba,downward,K=10)$delta[2]
downwardaic <- AIC(downward)
downwardbic <- BIC(downward)
downward_model <-c('downward',downwardcv,downwardaic,downwardbic)
names(downward_model) <- c("model","cv", "aic",'bic')
bind_rows(forward_model,backward_model,upward_model,downward_model)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(boot)
library(iterators)
library(foreach)
library(Matrix)
library(shape)
library(glmnet)
forward <- glm(doctor ~ income + crimes + beds + T.p,data = smba)
forwardcv <- cv.glm(smba,forward,K=10)$delta[2]
forwardaic <- AIC(forward)
forwardbic <- BIC(forward)
forward_model <-c('forward',forwardcv,forwardaic,forwardbic )
names(forward_model) <- c("model","cv", "aic",'bic')
backward <- glm(doctor ~ Land + beds + h.sch + labor + income + crimes,data = smba)
backwardcv <- cv.glm(smba,backward,K=10)$delta[2]
backwardaic <- AIC(backward)
backwardbic <- BIC(backward)
backward_model <-c('backward',backwardcv,backwardaic,backwardbic )
names(backward_model) <- c("model","cv", "aic",'bic')
upward <- glm(doctor ~ income + crimes + beds + T.p,data= smba)
upwardcv <- cv.glm(smba,upward,K=10)$delta[2]
upwardaic <- AIC(upward)
upwardbic <- BIC(upward)
upward_model <-c('upward',upwardcv ,upwardaic,upwardbic )
names(upward_model) <- c("model","cv", "aic",'bic')
downward <- glm(doctor ~ Land + beds + h.sch + labor + income + crimes,data = smba)
downwardcv <- cv.glm(smba,downward,K=10)$delta[2]
downwardaic <- AIC(downward)
downwardbic <- BIC(downward)
downward_model <-c('downward',downwardcv,downwardaic,downwardbic)
names(downward_model) <- c("model","cv", "aic",'bic')
bind_rows(forward_model,backward_model,upward_model,downward_model)
View(smba)
smba$region <- as.factor(smba$region)
fit1 = cv.glmnet(x, y)
smba$region <- as.factor(smba$region)
lm(doctor~region,data =smba)
fit1 = cv.glmnet(x, y)
smba$region <- as.factor(smba$region)
model <-lm(doctor~region,data =smba)
summary(model)
fit1 = cv.glmnet(x, y)
smba$region <- as.factor(smba$region)
library(MASS)
smba <- read.table(file="/Users/tanjunheng/Documents/st3131Data/SMSA.txt",header=TRUE)
fit.1 = lm(doctor~1, data=smba)
fit.2 = lm(doctor~Land+T.p+P.city+p.65+beds+h.sch+labor+income+crimes+region, data=smba)
smba$region <- as.factor(smba$region)
model <-lm(doctor~region,data =smba)
summary(model)
y <- model$residuals
x <- smba[-4]
fit1 = cv.glmnet(x, y)
View(x)
View(smba)
smba$region <- as.factor(smba$region)
model <-lm(doctor~region,data =smba)
summary(model)
y <- model$residuals
x <- smba[-5,-11]
fit1 = cv.glmnet(x, y)
View(x)
smba$region <- as.factor(smba$region)
model <-lm(doctor~region,data =smba)
summary(model)
y <- model$residuals
x <- smba[-5]
fit1 = cv.glmnet(x, y)
View(x)
smba$region <- as.factor(smba$region)
model <-lm(doctor~region,data =smba)
summary(model)
y <- model$residuals
x <- smba[-5]
x <- smba[-10]
fit1 = cv.glmnet(x, y)
smba$region <- as.factor(smba$region)
model <-lm(doctor~region,data =smba)
summary(model)
y <- as.vector(model$residuals)
x <- smba[-5]
x <- smba[-10]
x<-as.matrix(x)
fit1 = cv.glmnet(x, y)
View(x)
smba$region <- as.factor(smba$region)
model <-lm(doctor~region,data =smba)
summary(model)
y <- as.vector(model$residuals)
x <- smba[-5]
x <- smba[-10]
x <-as.matrix(x)
fit1 <- cv.glmnet(x, y)
smba$region <- as.factor(smba$region)
y <- as.vector(smba$doctor)
x <- smba[-5]
x <-as.matrix(x)
fit1 <- cv.glmnet(x, y)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(boot)
library(iterators)
library(foreach)
library(Matrix)
library(shape)
library(glmnet)
smba$region <- as.factor(smba$region)
y <- as.vector(smba$doctor)
x <- smba[-5]
x <-as.matrix(x)
fit1 <- cv.glmnet(x, y)
smba$region <- as.factor(smba$region)
y <- as.vector(smba$doctor)
x <- smba[-5]
x <-as.matrix(x)
fit1 <- cv.glmnet(y, x)
smba$region <- as.factor(smba$region)
y <- as.vector(smba$doctor)
x <- smba[-5]
x <-as.matrix(x)
fit1 <- cv.glmnet(x, y)
View(x)
smba$region <- as.factor(smba$region)
model <-lm(doctor~region,data =smba)
summary(model)
y <- as.vector(model$residuals)
x <- smba[-5]
x <- smba[-10]
x <-as.matrix(as.numeric(x))
smba$region <- as.factor(smba$region)
model <-lm(doctor~region,data =smba)
summary(model)
y <- as.vector(model$residuals)
x <- smba[-5]
x <- as.numeric(smba[-10])
smba$region <- as.factor(smba$region)
model <-lm(doctor~region,data =smba)
summary(model)
y <- as.vector(model$residuals)
x <- smba[-5]
x <- as.numeric(smba[-10])
smba$region <- as.factor(smba$region)
model <-lm(doctor~region,data =smba)
summary(model)
y <- as.vector(model$residuals)
x <- smba[-5]
x <- smba[-10]
x <- mutate_all(x, function(x) as.numeric(as.character(x)))
x <-as.matrix(x)
fit1 <- cv.glmnet(x, y)
coef(fit1, s = fit1$lambda.min)
View(x)
smba$region <- as.factor(smba$region)
model <-lm(doctor~region,data =smba)
summary(model)
y <- as.vector(model$residuals)
x <- smba[-5]
x <- smba[-10]
x <- mutate_all(x, function(x) as.numeric(as.character(x)))
x <-as.matrix(x)
fit1 <- cv.glmnet(x, y)
coef(fit1, s = fit1$lambda.min)
View(x)
smba$region <- as.factor(smba$region)
model <-lm(doctor~region,data =smba)
summary(model)
y <- as.vector(model$residuals)
x <- smba[-5]
x <- smba[-10]
x <- mutate_all(x, function(x) as.numeric(as.character(x)))
#x <-as.matrix(x)
fit1 <- cv.glmnet(x, y)
View(x)
x <- mutate_all(smba, function(x) as.numeric(as.character(x)))
smba$region <- as.factor(smba$region)
model <-lm(doctor~region,data =smba)
summary(model)
y <- as.vector(model$residuals)
x <- smba[-5]
x <- smba[-10]
#x <-as.matrix(x)
fit1 <- cv.glmnet(x, y)
View(x)
x <- mutate_all(smba, function(x) as.numeric(as.character(x)))
x$region <- as.factor(x$region)
model <-lm(doctor~region,data =smba)
summary(model)
y <- as.vector(model$residuals)
x <- x[-5]
x <- x[-10]
#x <-as.matrix(x)
fit1 <- cv.glmnet(x, y)
View(x)
x <- mutate_all(smba, function(x) as.numeric(as.character(x)))
x$region <- as.factor(x$region)
model <-lm(doctor~region,data =smba)
summary(model)
y <- as.vector(model$residuals)
x <- x[-5]
x <- x[-10]
x <-as.matrix(x)
fit1 <- cv.glmnet(x, y)
coef(fit1, s = fit1$lambda.min)
smba <- mutate_all(smba, function(x) as.numeric(as.character(x)))
smba$region <- as.factor(smba$region)
y <- as.vector(smba$doctor)
x <- smba[-5]
x <-as.matrix(x)
fit1 <- cv.glmnet(x, y)
x <- mutate_all(smba, function(x) as.numeric(as.character(x)))
x$region <- as.factor(x$region)
y <- as.vector(smba$doctor)
x <- x[-5]
x <-as.matrix(x)
fit1 <- cv.glmnet(x, y)
x <- mutate_all(smba, function(x) as.numeric(as.character(x)))
x$region <- as.factor(x$region)
model <-lm(doctor~region,data =smba)
summary(model)
y <- as.vector(model$residuals)
x <- x[-5]
x <- x[-10]
x <-as.matrix(x)
fit1 <- cv.glmnet(x, y)
coef(fit1, s = fit1$lambda.min)
x <- mutate_all(smba, function(x) as.numeric(as.character(x)))
x$region <- as.factor(x$region)
y <- as.vector(smba$doctor)
x <- x[-5]
x <-as.matrix(x)
fit1 <- cv.glmnet(x, y)
x <- mutate_all(smba, function(x) as.numeric(as.character(x)))
x$region <- as.factor(x$region)
y <- as.vector(smba$doctor)
#x <- x[-5]
#x <-as.matrix(x)
fit1 <- cv.glmnet(x, y)
x <- mutate_all(smba, function(x) as.numeric(as.character(x)))
x$region <- as.factor(x$region)
y <- as.vector(smba$doctor)
x <- x[-5]
#x <-as.matrix(x)
fit1 <- cv.glmnet(x, y)
x <- mutate_all(smba, function(x) as.numeric(as.character(x)))
x$region <- as.factor(x$region)
y <- as.vector(smba$doctor)
x <- x[-5]
x <- mutate_all(x, function(x) as.numeric(as.character(x)))
x <-as.matrix(x)
fit1 <- cv.glmnet(x, y)
coef(fit1, s = fit1$lambda.min)
x <- mutate_all(smba, function(x) as.numeric(as.character(x)))
x$region <- as.factor(x$region)
y <- as.vector(smba$doctor)
x <- x[-5]
x <- mutate_all(x, function(x) as.numeric(as.character(x)))
x <-as.matrix(x)
fit1 <- cv.glmnet(x, y)
coef(fit1, s = fit1$lambda.min)
x<- smba
x$region <- as.factor(x$region)
y <- as.vector(smba$doctor)
x <- x[-5]
x <- mutate_all(x, function(x) as.numeric(as.character(x)))
x <-as.matrix(x)
fit1 <- cv.glmnet(x, y)
coef(fit1, s = fit1$lambda.min)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(boot)
library(iterators)
library(foreach)
library(Matrix)
library(shape)
library(glmnet)
data <- read.csv("/Users/tanjunheng/Documents/st3131Data/pullstrength.csv")
m1 <- lm(y~x1,data = data)
m2<- lm(y~x1+x2,data = data)
m3 <- lm(y~x1+x2+x3,data = data)
m4<-lm(y~x1+x2+x3+x4,data = data)
m5<-lm(y~x1+x2+x3+x4+x5,data = data)
m6<- lm(y~x1+x2+x3+x4+x5+x6,data = data)
v1 <-summary(m1)$coefficients[,2]**2
v2 <-summary(m2)$coefficients[,2]**2
v3 <-summary(m3)$coefficients[,2]**2
v4 <-summary(m4)$coefficients[,2]**2
v5 <-summary(m5)$coefficients[,2]**2
v6 <-summary(m5)$coefficients[,2]**2
as.data.frame(bind_rows(v1,v2,v3,v4,v5,v6))
adjv1 <-(summary(m1)$coefficients[,2]**2)/summary(m1)$sigma**2
adjv2 <-(summary(m2)$coefficients[,2]**2)/summary(m2)$sigma**2
adjv3 <-(summary(m3)$coefficients[,2]**2)/summary(m3)$sigma**2
adjv4 <-(summary(m4)$coefficients[,2]**2)/summary(m4)$sigma**2
adjv5 <-(summary(m5)$coefficients[,2]**2)/summary(m5)$sigma**2
adjv6 <-(summary(m6)$coefficients[,2]**2)/summary(m6)$sigma**2
as.data.frame(bind_rows(adjv1,adjv2,adjv3,adjv4,adjv5,adjv6))
m1 <- glm(y~x1,data = data)
m2<- glm(y~x1+x2,data = data)
m3 <- glm(y~x1+x2+x3,data = data)
m4<-glm(y~x1+x2+x3+x4,data = data)
m5<-glm(y~x1+x2+x3+x4+x5,data = data)
m6<- glm(y~x1+x2+x3+x4+x5+x6,data = data)
m1cv <- cv.glm(data,m1)$delta[2]
m1aic <- AIC(m1)
m1bic <- BIC(m1)
m1 <-c('m1',m1cv,m1aic,m1bic)
names(m1) <- c('model',"cv", "aic",'bic')
m2cv <- cv.glm(data,m2)$delta[2]
m2aic <- AIC(m2)
m2bic <- BIC(m2)
m2 <-c('m2',m2cv,m2aic,m2bic)
names(m2) <- c('model',"cv", "aic",'bic')
m3cv <- cv.glm(data,m3)$delta[2]
m3aic <- AIC(m3)
m3bic <- BIC(m3)
m3 <-c('m3',m3cv,m3aic,m3bic)
names(m3) <- c("model","cv", "aic",'bic')
m4cv <- cv.glm(data,m4)$delta[2]
m4aic <- AIC(m4)
m4bic <- BIC(m4)
m4 <-c("m4",m4cv,m4aic,m4bic)
names(m4) <- c("model","cv", "aic",'bic')
m5cv <- cv.glm(data,m5)$delta[2]
m5aic <- AIC(m5)
m5bic <- BIC(m5)
m5 <-c("m5",m5cv,m5aic,m5bic)
names(m5) <- c("model" ,"cv", "aic",'bic')
m6cv <- cv.glm(data,m6)$delta[2]
m6aic <- AIC(m6)
m6bic <- BIC(m6)
m6 <-c("m6",m6cv,m6aic,m6bic)
names(m6) <- c("model" ,"cv", "aic",'bic')
as.data.frame(bind_rows(m1,m2,m3,m4,m5,m6))
library(MASS)
smba <- read.table(file="/Users/tanjunheng/Documents/st3131Data/SMSA.txt",header=TRUE)
fit.1 = lm(doctor~1, data=smba)
fit.2 = lm(doctor~Land+T.p+P.city+p.65+beds+h.sch+labor+income+crimes+region, data=smba)
forward=stepAIC(fit.1,scope=list(upper=~Land+T.p+P.city+p.65+beds+h.sch+labor+income+crimes+region,
lower=~1),direction="forward")
forward <- glm(doctor ~ income + crimes + beds + T.p,data = smba)
forwardcv <- cv.glm(smba,forward,K=10)$delta[2]
forwardaic <- AIC(forward)
forwardbic <- BIC(forward)
forward_model <-c('forward',forwardcv,forwardaic,forwardbic )
names(forward_model) <- c("model","cv", "aic",'bic')
backward <- glm(doctor ~ Land + beds + h.sch + labor + income + crimes,data = smba)
backwardcv <- cv.glm(smba,backward,K=10)$delta[2]
backwardaic <- AIC(backward)
backwardbic <- BIC(backward)
backward_model <-c('backward',backwardcv,backwardaic,backwardbic )
names(backward_model) <- c("model","cv", "aic",'bic')
upward <- glm(doctor ~ income + crimes + beds + T.p,data= smba)
upwardcv <- cv.glm(smba,upward,K=10)$delta[2]
upwardaic <- AIC(upward)
upwardbic <- BIC(upward)
upward_model <-c('upward',upwardcv ,upwardaic,upwardbic )
names(upward_model) <- c("model","cv", "aic",'bic')
downward <- glm(doctor ~ Land + beds + h.sch + labor + income + crimes,data = smba)
downwardcv <- cv.glm(smba,downward,K=10)$delta[2]
downwardaic <- AIC(downward)
downwardbic <- BIC(downward)
downward_model <-c('downward',downwardcv,downwardaic,downwardbic)
names(downward_model) <- c("model","cv", "aic",'bic')
bind_rows(forward_model,backward_model,upward_model,downward_model)
x <- mutate_all(smba, function(x) as.numeric(as.character(x)))
x$region <- as.factor(x$region)
model <-lm(doctor~region,data =smba)
summary(model)
y <- as.vector(model$residuals)
x <- x[-5]
x <- x[-10]
x <-as.matrix(x)
fit1 <- cv.glmnet(x, y)
coef(fit1, s = fit1$lambda.min)
library(MASS)
library(dplyr)
library(graphics)
interaction <- lm(resale_price~town*flat_model
,x=TRUE,data=train)
library(MASS)
library(dplyr)
library(graphics)
preprocess <- function(file) {
df = read.csv(file)
df1 = df%>%
select(-lease_commence_date, -X, -address)
df6 = df1%>%
filter(flat_model=="Multi Generation")
df1$town = factor(df1$town)
df1$flat_type = relevel(factor(df1$flat_type), "3 ROOM")
df1$flat_model = relevel(factor(df1$flat_model), "Model A")
return(df1)
}
train <-preprocess("df2017n.csv")
getwd
getwd()
getwd()
setwd('/Users/tanjunheng/Documents/GitHub/hdb/data')
preprocess <- function(file) {
df = read.csv(file)
df1 = df%>%
select(-lease_commence_date, -X, -address)
df6 = df1%>%
filter(flat_model=="Multi Generation")
df1$town = factor(df1$town)
df1$flat_type = relevel(factor(df1$flat_type), "3 ROOM")
df1$flat_model = relevel(factor(df1$flat_model), "Model A")
return(df1)
}
train <-preprocess("df2017n.csv")
interaction <- lm(resale_price~town*flat_model
,x=TRUE,data=train)
summary(interaction )
